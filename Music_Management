#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<windows.h>
#include<string.h>
#include<stdlib.h>

struct mictype
{
	char name[20];
	char singer[20];
	struct
	{	int year;
		int month;
		int day;
	}date;
	int time;
}music[101];
int num;
int change = 0;



int main()
{
	int menu();
	int duqu();
	duqu();
	menu();
}
int menu()
{
	int zhujiemian();
	printf("**********************\n");
	printf("欢迎使用歌曲库管理系统\n");
	printf("**********************\n");
	printf("1.添加\n");
	printf("2.查询\n");
	printf("3.显示\n");
	printf("4.删除\n");
	printf("5.排序\n");
	printf("6.保存\n");
	printf("7.退出\n");
	printf("请输入数字后按Enter键选择要使用的功能\n");
	zhujiemian();
	return 0;
}
int zhujiemian()
{
	int tianjia();
	int chaxun();
	int xianshi();
	int shanchu();
	int paixu();
	int baocun();
	int tuichu();
	int jiaohuan(int a, int b);
	int select;
	scanf("%d", &select);
	switch (select)
	{
	case 1:tianjia(); break;
	case 2:chaxun(); break;
	case 3:xianshi(); break;
	case 4:shanchu(); break;
	case 5:paixu(); break;
	case 6:baocun(); break;
	case 7:tuichu(); break;
	default: {
		gets();
		MessageBox(NULL, TEXT("您的输入有误，请重新输入"), TEXT("提示"), MB_OK);
		system("cls");
	}; break;
	}
	menu();
	return 0;
}
int duqu()
{
	int i;
	FILE *mic;
	mic = fopen("mic.ini", "r");
	if (mic== NULL)
	{
		MessageBox(NULL,TEXT("没有找到歌曲库，应首先添加歌曲"),TEXT("提示"),MB_OK);
		mic = fopen("mic.ini", "a");
		num=0;
		fputc(num, mic);
		fclose(mic);
	}
	else
	{
		num = fgetc(mic);
		for (i = 0; i < num; i++)
		{
			fread(&music[i].name, 10, 2, mic);
			fread(&music[i].singer, 10, 2, mic);
			fscanf(mic, "%d", &music[i].date.year);
			music[i].date.month = fgetc(mic);
			music[i].date.day = fgetc(mic);
			fscanf(mic, "%d", &music[i].time);
		}
	}
	fclose(mic);
	return 0;

}

int tianjia()
{
	printf("请输入要添加的歌曲名(不超过10个汉字或20个字符)\n");
	scanf("%s", &music[num].name);
	printf("请输入该歌曲的歌手(不超过10个汉字或20个字符)\n");
	scanf("%s", &music[num].singer);
	int i;
	for (i = 0; i < num; i++)
	{
		if (strcmp(music[num].name, music[i].name) == 0)
			if (strcmp(music[num].singer, music[i].singer) == 0)
			{
				MessageBox(NULL, TEXT("该歌曲已存在,无法继续添加"), TEXT("提示"), MB_OK);
				system("cls");
				gets();
				menu();
			}
			else
				;
		else
			;
	}
	printf("请输入该歌曲的日期(年月日之间用-连接)\n");
	scanf("%d-%d-%d", &music[num].date.year, &music[num].date.month,&music[num].date.day);
	while (music[num].date.year > 2016 || music[num].date.year < 1700 || music[num].date.month < 1 || music[num].date.month>12 || music[num].date.day < 1 || music[num].date.day>31)
	{
		MessageBox(NULL, TEXT("您的输入有误，请重新输入"), TEXT("提示"), MB_OK);
		gets();
		scanf("%d-%d-%d", &music[num].date.year, &music[num].date.month, &music[num].date.day);
	}
	printf("请输入该歌曲的时长\n");
	scanf("%d", &music[num].time);
	num++;
	change = 1;
	MessageBox(NULL, TEXT("添加数据成功"), TEXT("提示"), MB_OK);
	system("cls");
	menu();
	return 0;

}
int xianshi()
{
	system("cls");

	int i;

	if (num == 0)
	{
		MessageBox(NULL, TEXT("歌曲库文件为空，请录入并保存后查询"), TEXT("提示"), MB_OK);
		system("cls");
		main();
	}
	printf("  ");
	printf("歌曲名称               ");
	printf("歌手                   ");
	printf("出版日期     ");
	printf("时长");
	printf("\n");
	for (i = 0; i < num;i++)
	{
		printf("%d.",i+1);
		printf("%-20s", music[i].name);
		printf("   ");
		printf("%-20s", music[i].singer);
		printf("   ");
		printf("%4d", music[i].date.year);
		printf("-");
		printf("%2d", music[i].date.month);
		printf("-");
		printf("%2d", music[i].date.day);
		printf("   ");
		printf("%d", music[i].time);
		printf("\n");
	}
	menu();
	return 0;
}
int chaxun()
{
	printf("请输入您要查找的歌曲名或演唱者名称\n");
	char str[20];
	int so[100];
	int i;
	int j = 0;
	gets();
	scanf("%s", str);
	for (i = 0; i < num; i++)
		if (strcmp(str, music[i].name) == 0 || strcmp(str, music[i].singer) == 0)
		{
			so[j] = i;
			j++;
		}
	if (j > 0)
	{
		{
			system("cls");
			printf("找到了如下歌曲：\n");
			printf("  ");
			printf("歌曲名称               ");
			printf("歌手                   ");
			printf("出版日期     ");
			printf("时长");
			printf("\n");
			for (i = 0; i < j; i++)
			{
				printf("%d.", i+1);
				printf("%-20s", music[so[i]].name);
				printf("   ");
				printf("%-20s", music[so[i]].singer);
				printf("   ");
				printf("%4d", music[so[i]].date.year);
				printf("-");
				printf("%2d", music[so[i]].date.month);
				printf("-");
				printf("%2d", music[so[i]].date.day);
				printf("   ");
				printf("%d", music[so[i]].time);
				printf("\n");
			}
		}
	}
	else
	{
		MessageBox(NULL, TEXT("没有找到该结果"), TEXT("提示"), MB_OK);

	}

	return 0;

}
int shanchu()
{
	/
	printf("请输入您要删除的歌曲名称\n");
	char str[20];
	scanf("%s",str);
	int i, j=0;
	int k[100] = { 0 };
	for (i = 0 ; i < num; i++)
		if (strcmp(music[i].name, str) == 0)
		{
			k[j] = i;
			j++;
		}
	if (j == 0)
		MessageBox(NULL, TEXT("没有找到相应歌曲"), TEXT("提示"), MB_OK);
	else
	{
		if (j == 1)
		{
			jiaohuan(k[0], num);
			num = num - 1;
			MessageBox(NULL, TEXT("删除成功"), TEXT("提示"), MB_OK);
		}
		else
		{
			int m[100];
			int n=1;
			printf("找到了如下歌曲,请选择要删除的歌曲序号\n");
			printf("  ");
			printf("歌曲名称               ");
			printf("歌手                   ");
			printf("出版日期     ");
			printf("时长");
			printf("\n");
			for (i = 0; i < j; i++)
			{
				printf("%d.",n);
				m[n] = k[i];
				printf("%-20s", music[k[i]].name);
				printf("   ");
				printf("%-20s", music[k[i]].singer);
				printf("   ");
				printf("%4d", music[k[i]].date.year);
				printf("-");
				printf("%2d", music[k[i]].date.month);
				printf("-");
				printf("%2d", music[k[i]].date.day);
				printf("   ");
				printf("%d", music[k[i]].time);
				printf("\n");
				n++;
			}
			scanf("%d", &n);
			jiaohuan(n, num);
			num = num - 1;
			MessageBox(NULL, TEXT("删除成功"), TEXT("提示"), MB_OK);


		}
	}
	system("cls");
	return 0;
}
int paixu()
{
	int i, j;
	printf("请输入您要排序的依据：\n");
	printf("1.歌曲名\t2.演唱者\t3.发布日期\t4.歌曲时长\n");
	gets();
	scanf("%d", &i);
	if (i != 1 && i != 2 && i != 3 && i != 4)
	{
		gets();
		MessageBox(NULL, TEXT("您的输入有误，请重新输入"), TEXT("提示"), MB_OK);
		system("cls");
		menu();
	}
	printf("请输入您要进行的排序方式：\n");
	printf("1.升序\t2.降序\n");
	gets();
	scanf("%d", &j);
	if (j!= 1 && j != 2)
	{
		gets();
		MessageBox(NULL, TEXT("您的输入有误，请重新输入"), TEXT("提示"), MB_OK);
		system("cls");
		menu();
	}
	if (i == 1 && j == 1)
	{
		for (j = 0; j < num - 1; j++)
			for (i = 0; i < num - 1 - j; i++)
			{
				if (strcmp(music[i].name,music[i+1].name)==1)
				{
					jiaohuan(i,i+1);
				}
			}
	}
	else
		if (i == 1 && j == 2)
		{
			for (j = 0; j < num - 1; j++)
				for (i = 0; i < num - 1 - j; i++)
				{
					if (strcmp(music[i].name, music[i + 1].name) == -1)
					{
						jiaohuan(i, i + 1);
					}
				}
		}
		else
			if (i == 2 && j == 1)
			{
				for (j = 0; j < num - 1; j++)
					for (i = 0; i < num - 1 - j; i++)
					{
						if (strcmp(music[i].singer, music[i + 1].singer) == 1)
						{
							jiaohuan(i, i + 1);
						}
					}
			}
			else
				if (i == 2 && j == 2)
				{
					for (j = 0; j < num - 1; j++)
						for (i = 0; i < num - 1 - j; i++)
						{
							if (strcmp(music[i].singer, music[i + 1].singer) == -1)
							{
								jiaohuan(i, i + 1);
							}
						}
				}
				else
					if (i == 3 && j == 1)
					{

						for (j = 0; j < num - 1; j++)
							for (i = 0; i < num - 1 - j; i++)
							{
								if (music[i].date.year>music[i + 1].date.year)
								{
									jiaohuan(i, i + 1);
								}
							}
						for (j = 0; j < num - 1; j++)
							for (i = 0; i < num - 1 - j; i++)
							{
								if (music[i].date.month>music[i + 1].date.month&&music[i].date.year==music[i + 1].date.year)
								{
									jiaohuan(i, i + 1);
								}
							}
						for (j = 0; j < num - 1; j++)
							for (i = 0; i < num - 1 - j; i++)
							{
								if (music[i].date.day>music[i + 1].date.day&&music[i].date.month == music[i + 1].date.month&&music[i].date.year == music[i + 1].date.year)
								{
									jiaohuan(i, i + 1);
								}
							}
					}
					else
						if (i == 3 && j == 2)
						{
							{

								for (j = 0; j < num - 1; j++)
									for (i = 0; i < num - 1 - j; i++)
									{
										if (music[i].date.year<music[i + 1].date.year)
										{
											jiaohuan(i, i + 1);
										}
									}
								for (j = 0; j < num - 1; j++)
									for (i = 0; i < num - 1 - j; i++)
									{
										if (music[i].date.month<music[i + 1].date.month&&music[i].date.year == music[i + 1].date.year)
										{
											jiaohuan(i, i + 1);
										}
									}
								for (j = 0; j < num - 1; j++)
									for (i = 0; i < num - 1 - j; i++)
									{
										if (music[i].date.day<music[i + 1].date.day&&music[i].date.month == music[i + 1].date.month&&music[i].date.year == music[i + 1].date.year)
										{
											jiaohuan(i, i + 1);
										}
									}
							}
						}
						else
							if (i == 4 && j == 1)
							{
								for (j = 0; j < num - 1; j++)
									for (i = 0; i < num - 1 - j; i++)
									{
										if (music[i].time>music[i + 1].time)
										{
											jiaohuan(i, i + 1);
										}
									}
							}
							else
								if (i == 4 && j == 2)
								{
									if (i == 4 && j == 1)
									{
										for (j = 0; j < num - 1; j++)
											for (i = 0; i < num - 1 - j; i++)
											{
												if (music[i].time<music[i + 1].time)
												{
													jiaohuan(i, i + 1);
												}
											}
									}
								}
	MessageBox(NULL, TEXT("删除成功"), TEXT("提示"), MB_OK);
	return 0;
}
int baocun()
{
	int i;
	FILE *mic;
	if ((mic = fopen("mic.ini", "w")) == NULL)
	{
		MessageBox(NULL, TEXT("无法打开文件，请检查文件是否被占用"), TEXT("提示"), MB_OK);
		system("cls");
		main();
	}

	if (change==0)
		MessageBox(NULL, TEXT("文件没有进行更改，无需保存"), TEXT("提示"), MB_OK);
	else
	{
		fputc(num, mic);
		for (i = 0; i < num; i++)
		{
			fwrite(&music[i].name, 10, 2, mic);
			fwrite(&music[i].singer, 10, 2, mic);
			fprintf(mic, "%d", music[i].date.year);
			fputc(music[i].date.month, mic);
			fputc(music[i].date.day, mic);
			fprintf(mic, "%d", music[i].time);
		}

		fclose(mic);
		MessageBox(NULL, TEXT("保存文件成功"), TEXT("提示"), MB_OK);
		change = 0;
	}
	system("cls");
	menu();
	return 0;
}


int jiaohuan(int a, int b)
{
	struct mictype temp;
	strcpy(temp.name, music[a].name);
	strcpy(temp.singer, music[a].singer);
	temp.date.year = music[a].date.year;
	temp.date.month = music[a].date.month;
	temp.date.day = music[a].date.day;
	temp.time = music[a].time;
	strcpy(music[a].name, music[b].name);
	strcpy(music[a].singer, music[b].singer);
	music[a].date.year = music[b].date.year;
	music[a].date.month = music[b].date.month;
	music[a].date.day = music[b].date.day;
	music[a].time = music[b].time;
	strcpy(music[b].name, temp.name);
	strcpy(music[b].singer, temp.singer);
	music[b].date.year = temp.date.year;
	music[b].date.month = temp.date.month;
	music[b].date.day = temp.date.day;
	music[b].time = temp.time;
	change = 1;
	return 0;
}
int tuichu()
{
	if (change == 1)
	{
		printf("文件已经修改,是否保存（Y/N）\n");
		gets();
		char yn;
		scanf("%c", &yn);
		if (yn == 'Y' || yn == 'y')
		{
			{
				int i;
				FILE *mic;
				mic = fopen("mic.ini", "w");
				fputc(num, mic);
				for (i = 0; i < num; i++)
				{
					fwrite(&music[i].name, 10, 2, mic);
					fwrite(&music[i].singer, 10, 2, mic);
					fprintf(mic, "%d", music[i].date.year);
					fputc(music[i].date.month, mic);
					fputc(music[i].date.day, mic);
					fprintf(mic, "%d", music[i].time);
				}

				fclose(mic);
				MessageBox(NULL, TEXT("保存文件成功"), TEXT("提示"), MB_OK);
				change = 0;
			}
			exit(0);
		}
		else
			if (yn == 'N' || yn == 'n')
			{
				exit(0);
			}
			else
				MessageBox(NULL, TEXT("您的输入有误,请重新输入"), TEXT("提示"), MB_OK);
	}
	else
		exit(0);

	return 0;
}
